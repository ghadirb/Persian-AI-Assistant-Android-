name: Complete Build & Release

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build Type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        
    - name: Cache Gradle Dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.android/build-cache
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Create schemas directory
      run: mkdir -p app/schemas
      
    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1
      
    - name: Check Project Structure
      run: |
        echo "=== Root Directory ==="
        ls -la
        echo "=== App Directory ==="
        ls -la app/
        echo "=== Gradle Wrapper ==="
        ls -la gradle/wrapper/
        echo "=== Keystore Check ==="
        if [ -f "app/debug.keystore" ]; then
          echo "✅ Debug keystore found"
        else
          echo "❌ Debug keystore missing"
        fi
        
    - name: Check Gradle Version
      run: ./gradlew --version
      
    - name: Clean Project
      run: ./gradlew clean --stacktrace
      
    - name: Run Tests
      run: ./gradlew test --stacktrace --continue
      continue-on-error: true
      
    - name: Build Debug APK
      if: github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == '' || github.event_name != 'workflow_dispatch'
      run: ./gradlew assembleDebug --stacktrace --info
      
    - name: Build Release APK
      if: github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/')
      run: ./gradlew assembleRelease --stacktrace --info
      
    - name: Build AAB (Android App Bundle)
      if: github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/')
      run: ./gradlew bundleRelease --stacktrace --info
      continue-on-error: true
      
    - name: List Build Outputs
      run: |
        echo "=== Build Outputs ==="
        find app/build/outputs -type f -name "*.apk" -o -name "*.aab" 2>/dev/null || echo "No build outputs found"
        echo "=== APK Details ==="
        find app/build/outputs -name "*.apk" -exec ls -lh {} \; 2>/dev/null || echo "No APK files"
        echo "=== AAB Details ==="
        find app/build/outputs -name "*.aab" -exec ls -lh {} \; 2>/dev/null || echo "No AAB files"
        
    - name: Upload Debug APK
      if: github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == '' || github.event_name != 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: persian-ai-assistant-debug-${{ github.run_number }}
        path: |
          app/build/outputs/apk/debug/*.apk
        retention-days: 30
        if-no-files-found: warn
        
    - name: Upload Release APK
      if: github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: persian-ai-assistant-release-${{ github.run_number }}
        path: |
          app/build/outputs/apk/release/*.apk
        retention-days: 90
        if-no-files-found: warn
        
    - name: Upload AAB
      if: github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: persian-ai-assistant-bundle-${{ github.run_number }}
        path: |
          app/build/outputs/bundle/release/*.aab
        retention-days: 90
        if-no-files-found: ignore
        
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ github.run_number }}
        path: |
          app/build/reports/tests/
          app/build/test-results/
        retention-days: 7
        if-no-files-found: ignore
        
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          app/build/outputs/apk/release/*.apk
          app/build/outputs/bundle/release/*.aab
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build Summary
      if: always()
      run: |
        echo "## 📊 Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Item | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Build Type | ${{ github.event.inputs.build_type || 'debug' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Trigger | ${{ github.event_name }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Branch/Tag | ${{ github.ref_name }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Commit | ${{ github.sha }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
          echo "✅ Debug APK created successfully" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
          echo "✅ Release APK created successfully" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f "app/build/outputs/bundle/release/app-release.aab" ]; then
          echo "✅ AAB created successfully" >> $GITHUB_STEP_SUMMARY
        fi
