name: Automatic Build

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
  pull_request:
    branches: [ main, master ]

jobs:
  auto-build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        
    - name: Cache Gradle Dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-auto-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-auto-
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Create required directories
      run: mkdir -p app/schemas
      
    - name: Validate Project
      run: |
        echo "=== Auto Build Validation ==="
        echo "Event: ${{ github.event_name }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        echo ""
        ./gradlew --version
        
        # Check keystore
        if [ -f "app/debug.keystore" ]; then
          echo "✅ Debug keystore found"
        else
          echo "⚠️ Debug keystore missing - may affect signing"
        fi
      
    - name: Clean Project
      run: ./gradlew clean --stacktrace
      
    - name: Run Lint Check
      run: ./gradlew lintDebug --stacktrace
      continue-on-error: true
      
    - name: Build Debug APK
      id: build
      run: |
        echo "🔨 Starting automatic build..."
        if ./gradlew assembleDebug --stacktrace --info; then
          echo "build_success=true" >> $GITHUB_OUTPUT
          echo "✅ Build completed successfully"
        else
          echo "build_success=false" >> $GITHUB_OUTPUT
          echo "❌ Build failed"
          exit 1
        fi
        
    - name: Verify APK
      if: steps.build.outputs.build_success == 'true'
      run: |
        if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
          echo "✅ APK generated successfully"
          ls -lh app/build/outputs/apk/debug/app-debug.apk
          
          # Get APK size
          APK_SIZE=$(du -h app/build/outputs/apk/debug/app-debug.apk | cut -f1)
          echo "📦 APK Size: $APK_SIZE"
        else
          echo "❌ APK not found at expected location"
          find app/build/outputs -name "*.apk" 2>/dev/null || echo "No APK files found"
        fi
        
    - name: Upload Debug APK
      if: steps.build.outputs.build_success == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: auto-build-apk-${{ github.run_number }}
        path: |
          app/build/outputs/apk/debug/*.apk
        retention-days: 7
        if-no-files-found: warn
        
    - name: Upload Lint Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: lint-reports-${{ github.run_number }}
        path: |
          app/build/reports/lint-results-debug.html
          app/build/reports/lint-results-debug.xml
        retention-days: 3
        if-no-files-found: ignore
        
    - name: Auto Build Summary
      if: always()
      run: |
        echo "## 🤖 Automatic Build Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.build.outputs.build_success }}" == "true" ]; then
          echo "✅ **Build Status**: SUCCESS" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
            APK_SIZE=$(du -h app/build/outputs/apk/debug/app-debug.apk | cut -f1)
            echo "📦 **APK Size**: $APK_SIZE" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "❌ **Build Status**: FAILED" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "🌿 **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "📝 **Event**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "🔢 **Run**: #${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
